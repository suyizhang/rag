[
  {
    "id": "lc_doc1",
    "title": "LangChain框架介绍",
    "content": "LangChain是一个用于开发由语言模型驱动的应用程序的框架。它提供了以下核心概念：\n        \n        1. LLMs和Chat Models：与语言模型交互的接口\n        2. Prompt Templates：管理LLM的提示\n        3. Chains：将多个组件链接在一起\n        4. Agents：使用LLM来决定采取哪些行动\n        5. Memory：在链或代理调用之间保持状态\n        6. Vector Stores：存储和搜索非结构化数据\n        \n        LangChain支持多种LLM提供商，包括OpenAI、Google、Anthropic等。它还提供了丰富的工具生态系统，用于构建复杂的AI应用程序。",
    "category": "框架",
    "tags": [
      "LangChain",
      "框架",
      "LLM",
      "AI开发"
    ],
    "metadata": {
      "author": "LangChain Team",
      "difficulty": "中级",
      "readTime": "8分钟"
    },
    "timestamp": "2025-08-30T10:39:24.108Z"
  },
  {
    "id": "lc_doc2",
    "title": "RAG系统架构设计",
    "content": "检索增强生成(RAG)系统的核心架构包括以下组件：\n        \n        1. 文档加载器：从各种源加载文档\n        2. 文本分割器：将长文档分割成可管理的块\n        3. 嵌入模型：将文本转换为向量表示\n        4. 向量数据库：存储和检索文档向量\n        5. 检索器：根据查询检索相关文档\n        6. 生成模型：基于检索的上下文生成回答\n        \n        在LangChain中，这些组件可以通过Chains和Agents进行组合，创建智能的问答系统。RAG系统特别适合需要访问大量外部知识的应用场景。",
    "category": "架构",
    "tags": [
      "RAG",
      "架构",
      "检索",
      "生成",
      "向量数据库"
    ],
    "metadata": {
      "author": "AI Architect",
      "difficulty": "高级",
      "readTime": "10分钟"
    },
    "timestamp": "2025-08-30T10:39:24.108Z"
  },
  {
    "id": "lc_doc3",
    "title": "智能代理(Agents)详解",
    "content": "LangChain中的智能代理是能够使用工具并根据用户输入做出决策的系统。代理的核心组件包括：\n        \n        1. Agent：决策制定的核心逻辑\n        2. Tools：代理可以使用的工具集合\n        3. Toolkit：相关工具的集合\n        4. Agent Executor：运行代理的执行器\n        \n        常见的代理类型：\n        - ReAct Agent：推理和行动的结合\n        - Plan-and-Execute Agent：先制定计划再执行\n        - Self-Ask Agent：自我提问的代理\n        \n        代理可以访问各种工具，如搜索引擎、计算器、数据库查询等，使其能够处理复杂的多步骤任务。",
    "category": "代理",
    "tags": [
      "Agent",
      "智能代理",
      "工具",
      "决策",
      "ReAct"
    ],
    "metadata": {
      "author": "Agent Expert",
      "difficulty": "高级",
      "readTime": "12分钟"
    },
    "timestamp": "2025-08-30T10:39:24.108Z"
  },
  {
    "id": "lc_doc4",
    "title": "向量数据库与嵌入",
    "content": "向量数据库是现代AI应用的核心基础设施，用于存储和检索高维向量数据。在RAG系统中的作用：\n        \n        1. 文本嵌入：将文档转换为向量表示\n        2. 相似性搜索：基于向量相似度检索相关文档\n        3. 语义理解：捕获文本的语义含义\n        \n        LangChain支持的向量数据库：\n        - Chroma：轻量级的开源向量数据库\n        - Pinecone：云端向量数据库服务\n        - Weaviate：开源的向量搜索引擎\n        - FAISS：Facebook的相似性搜索库\n        \n        嵌入模型的选择对检索质量至关重要，常用的包括OpenAI Embeddings、Google Embeddings等。",
    "category": "技术",
    "tags": [
      "向量数据库",
      "嵌入",
      "Chroma",
      "Pinecone",
      "语义搜索"
    ],
    "metadata": {
      "author": "Vector DB Expert",
      "difficulty": "中级",
      "readTime": "6分钟"
    },
    "timestamp": "2025-08-30T10:39:24.108Z"
  }
]